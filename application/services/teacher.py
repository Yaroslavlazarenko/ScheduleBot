from typing import List, Tuple
from api import ApiTeacherDTO, ResourceNotFoundError
from api.gateways import TeacherGateway
from api import ApiTeacherInfoDTO

class TeacherService:
    def __init__(self, gateway: TeacherGateway):
        self._gateway = gateway

    async def get_all_teachers(self) -> List[ApiTeacherDTO]:
        """–û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤."""
        response_data = await self._gateway.get_all_teachers()
        if not response_data:
            return []
        return [ApiTeacherDTO.model_validate(teacher) for teacher in response_data]

    async def get_teacher_by_id(self, teacher_id: int) -> ApiTeacherDTO | None:
        """–û—Ç—Ä–∏–º—É—î –¥–µ—Ç–∞–ª—ñ –ø—Ä–æ –≤–∏–∫–ª–∞–¥–∞—á–∞ –∑–∞ –π–æ–≥–æ ID."""
        try:
            response_data = await self._gateway.get_teacher_by_id(teacher_id)
            return ApiTeacherDTO.model_validate(response_data)
        except ResourceNotFoundError:
            return None

    def extract_photo_and_infos(self, teacher: ApiTeacherDTO) -> Tuple[str | None, List[ApiTeacherInfoDTO]]:
        """
        –í–∏—Ç—è–≥—É—î URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó —Ç–∞ —Ä–µ—à—Ç—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑—ñ —Å–ø–∏—Å–∫—É infos.
        –ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä—Ç–µ–∂ (photo_url, other_infos).
        """
        photo_url = None
        other_infos = []
        for info in teacher.infos:
            if info.info_type_name.lower() == "photourl":
                photo_url = info.value
            else:
                other_infos.append(info)
        return photo_url, other_infos
    
    def format_teacher_details(self, teacher: ApiTeacherDTO, infos_to_display: List[ApiTeacherInfoDTO]) -> str:
        """
        –§–æ—Ä–º–∞—Ç—É—î –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–∏–∫–ª–∞–¥–∞—á–∞ —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–±–µ–∑ —Ñ–æ—Ç–æ).
        """
        header = f"üë®‚Äçüè´ <b>{teacher.full_name}</b>\n"
        parts = [header]

        if not infos_to_display:
            parts.append("<i>–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è.</i>")
        else:
            for info in infos_to_display:
                parts.append(f"<b>{info.info_type_name}:</b> {info.value}")

        return "\n".join(parts)