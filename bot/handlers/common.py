import logging

from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from application.services import GroupService
from bot.fsm import RegistrationFSM
from bot.keyboards import create_groups_keyboard

common_router = Router(name="common_router")
logger = logging.getLogger(__name__)


@common_router.message(CommandStart())
async def handle_start(message: Message, group_service: GroupService, state: FSMContext):
    """
    –ü–æ—á–∏–Ω–∞—î –ø—Ä–æ—Ü–µ—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –∑–∞–ø–∏—Ç—É—é—á–∏ –π–æ–≥–æ –≥—Ä—É–ø—É.
    """
    try:
        groups = await group_service.get_all_groups()
        if not groups:
            await message.answer("–ù–∞ –∂–∞–ª—å, –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≥—Ä—É–ø –¥–ª—è –≤–∏–±–æ—Ä—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
            return

        keyboard = create_groups_keyboard(groups)
        await message.answer(
            'üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ä–æ–∑–∫–ª–∞–¥–æ–º.\n\n'
            '–î–ª—è –ø–æ—á–∞—Ç–∫—É, –±—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –≥—Ä—É–ø—É –∑—ñ —Å–ø–∏—Å–∫—É:',
            reply_markup=keyboard
        )
        await state.set_state(RegistrationFSM.choosing_group)

    except Exception:
        logger.exception("Error in handle_start")
        await message.answer('–°—Ç–∞–ª–∞—Å—è –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É: /start')