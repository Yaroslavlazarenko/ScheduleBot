import logging

from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.exceptions import TelegramBadRequest

from application.services import GroupService, UserService
from bot.fsm import RegistrationFSM
from bot.keyboards import create_groups_keyboard, create_main_keyboard


common_router = Router(name="common_router")
logger = logging.getLogger(__name__)


@common_router.message(CommandStart())
async def handle_start(
    message: Message, 
    group_service: GroupService, 
    user_service: UserService,
    state: FSMContext
):
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á. –Ø–∫—â–æ —Ç–∞–∫, –ø–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.
    –Ü–Ω–∞–∫—à–µ –ø–æ—á–∏–Ω–∞—î –ø—Ä–æ—Ü–µ—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –ü—ñ—Å–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤–∏–¥–∞–ª—è—î –∫–æ–º–∞–Ω–¥—É /start.
    """
    if not message.from_user:
        return
    
    try:
        user = await user_service.get_user_by_telegram_id(message.from_user.id)
        if user:
            await message.answer(
                f"üëã –ó –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º, {message.from_user.first_name}!\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
                # <--- –ö–ª—é—á–µ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
                reply_markup=create_main_keyboard(is_admin=user.is_admin)
            )
        else:
            groups = await group_service.get_all_groups()
            if not groups:
                await message.answer("–ù–∞ –∂–∞–ª—å, –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≥—Ä—É–ø –¥–ª—è –≤–∏–±–æ—Ä—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
            else:
                keyboard = create_groups_keyboard(groups)
                await message.answer(
                    'üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ä–æ–∑–∫–ª–∞–¥–æ–º.\n\n'
                    '–î–ª—è –ø–æ—á–∞—Ç–∫—É, –±—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –≥—Ä—É–ø—É –∑—ñ —Å–ø–∏—Å–∫—É:',
                    reply_markup=keyboard
                )
                await state.set_state(RegistrationFSM.choosing_group)

    except Exception:
        logger.exception("Error in handle_start")
        await message.answer('–°—Ç–∞–ª–∞—Å—è –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É: /start')
    finally:
        try:
            await message.delete()
        except TelegramBadRequest as e:
            logger.warning("Could not delete user's /start message: %s", e)